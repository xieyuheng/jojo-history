(assert (eq vect-t (type-of [1 2 3 ["a" "b" "c"]])))

(assert (eq vect-t (type-of (quote [a b c]))))
(assert (eq vect-t (type-of '[a b c])))

(assert (eq (vect-to-list ["a" "b" "c"]) '("a" "b" "c")))
(assert (eq (list-to-vect '("a" "b" "c")) ["a" "b" "c"]))
(assert (eq (vect-to-list [1 2 3 ["a" "b" "c"]]) '(1 2 3 ["a" "b" "c"])))

(assert (eq (vect-length [1 2 3 ["a" "b" "c"]]) 4))

(assert (eq (vect-append [1 2] [3 4]) [1 2 3 4]))

(assert (eq (vect-slice [0 1 2 3 4] 1 3) [1 2]))

(assert (eq (vect-ref [0 1 2 3 4] 1) 1))
(assert (eq (vect-ref [0 1 2 3 4] 2) 2))
(assert (eq (vect-ref [0 1 2 3 4] 3) 3))

(assert (eq (vect-head [0 1 2 3 4]) 0))
(assert (eq (vect-rest [0 1 2 3 4]) [1 2 3 4]))

(assert (eq (vect-append
             (unit-vect (vect-head [0 1 2 3 4]))
             (vect-rest [0 1 2 3 4]))
            [0 1 2 3 4]))

(assert (eq (vect-reverse [1 2 3]) [3 2 1]))
