#+html_head: <link rel="stylesheet" href="css/org-page.css"/>
#+title: jojo-in-python reference

- doc the core

* getting start

*** install

***** pip

      #+begin_src sh
      pip install jojo --user
      #+end_src

* data stack

  - you can put data into the data-stack,
    and use jojo as an postfix notation calculator.

  #+begin_src jojo
    * 0 *  []
  1
    * 1 *  [1]
  2
    * 2 *  [1, 2]
  add
    * 1 *  [3]
  dup
    * 2 *  [3, 3]
  mul
    * 1 *  [9]
  #+end_src

* stack operation

  #+begin_src jojo
    * 0 *  []
  1 2 3
    * 1 *  [1]
    * 2 *  [1, 2]
    * 3 *  [1, 2, 3]
  dup
    * 4 *  [1, 2, 3, 3]
  drop
    * 3 *  [1, 2, 3]
  over
    * 4 *  [1, 2, 3, 2]
  drop
    * 3 *  [1, 2, 3]
  tuck
    * 4 *  [1, 3, 2, 3]
  drop
    * 3 *  [1, 3, 2]
  swap
    * 3 *  [1, 2, 3]
  #+end_src

* (+jojo) -- define function

  #+begin_src jojo
    * 0 *  []
  (+jojo square dup mul)
    * 0 *  []
  3
  ;1> [3]
  square
  ;=> * 1 * [9]
  #+end_src

* comments

  #+begin_src jojo
  (note
    )
  #+end_src

* list processing

  #+begin_src jojo
  1 null cons
  #+end_src

* local variable

* (begin) -- sequential

  #+begin_src jojo

  #+end_src

* (clo) -- closure

  #+begin_src jojo

  #+end_src

* condition

*** ifte

*** (if)

    #+begin_src jojo

    #+end_src

*** (when)

*** (cond)

*** (case)

* tail call recursion as loop

* built-in datatypes

*** (list)

*** ><

* (+data) -- define new datatype

  #+begin_src jojo
  (+data)
  #+end_src

* multiple dispatching

*** (+gene) -- define generic function prototype

*** (+disp) -- dispatching function

* built-in generics

*** p -- print

*** equal?

* print formated string

* macro system

*** (quote)

*** ><

* import python module

  #+begin_src jojo

  #+end_src

* create jojo module

  - I use module system of python.

  #+begin_src jojo

  #+end_src

* testing

* command line interface

* writing script
